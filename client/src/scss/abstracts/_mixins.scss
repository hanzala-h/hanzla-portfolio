@use 'sass:map';
@use 'variables' as *;

////
/// Project Mixins
/// Reusable helpers for responsive design, layout, and typography.
///

////
/// Responsive Mixin
////

/// Apply styles at a specific breakpoint
/// @param {String} $breakpoint - Key from the $breakpoints map
/// @example scss - Usage
///   @include respond-to('md') {
///     font-size: 1.125rem;
///   }
@mixin respond-to($breakpoint, $type: min) {
  $value: map.get($breakpoints, $breakpoint);

  @if $value {
    @media (#{$type}-width: $value) {
      @content;
    }
  } @else {
    @warn "Breakpoint `#{$breakpoint}` not found in $breakpoints map.";
  }
}

////
/// Flex Helpers
////

/// Flexbox container shortcut
/// @param {String} $direction [row] - Flex direction
/// @param {String} $justify [flex-start] - Justify content
/// @param {String} $align [stretch] - Align items
@mixin flex($direction: row, $justify: flex-start, $align: stretch) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}

////
/// Grid Helpers
////

/// Grid container shortcut
/// @param {Number} $columns [12] - Number of columns
/// @param {Length} $gap [1rem] - Grid gap
@mixin grid($columns: 12, $gap: 1rem) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

////
/// Typography Helpers
////

/// Apply font stack
/// @param {List} $family - Font family variable
/// @example scss - Usage
///   @include font-family($heading-font-stack);
@mixin font-family($family...) {
  font-family: $family;
}

/// Truncate overflowing text with ellipsis
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

////
/// Utilities
////

/// Center an element absolutely
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/// Hide element visually but keep accessible to screen readers
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}
